     1 00000000                                 ; haribote-ipl
     2 00000000                                 ; TAB=4
     3 00000000                                 
     4  = 00000009                              CYLS	EQU		9				; どこまで読み込むか
     5 00000000                                 
     6                                          		ORG		0x7c00			; このプログラムがどこに読み込まれるのか
     7 00007C00                                 
     8 00007C00                                 ; 以下は標準的なFAT12フォーマットフロッピーディスクのための記述
     9 00007C00                                 
    10 00007C00 EB 4E                           		JMP		entry
    11 00007C02 90                              		DB		0x90
    12 00007C03 48 41 52 49 42 4F 54 45         		DB		"HARIBOTE"		; ブートセクタの名前を自由に書いてよい（8バイト）
    13 00007C0B 0200                            		DW		512				; 1セクタの大きさ（512にしなければいけない）
    14 00007C0D 01                              		DB		1				; クラスタの大きさ（1セクタにしなければいけない）
    15 00007C0E 0001                            		DW		1				; FATがどこから始まるか（普通は1セクタ目からにする）
    16 00007C10 02                              		DB		2				; FATの個数（2にしなければいけない）
    17 00007C11 00E0                            		DW		224				; ルートディレクトリ領域の大きさ（普通は224エントリにする）
    18 00007C13 0B40                            		DW		2880			; このドライブの大きさ（2880セクタにしなければいけない）
    19 00007C15 F0                              		DB		0xf0			; メディアのタイプ（0xf0にしなければいけない）
    20 00007C16 0009                            		DW		9				; FAT領域の長さ（9セクタにしなければいけない）
    21 00007C18 0012                            		DW		18				; 1トラックにいくつのセクタがあるか（18にしなければいけない）
    22 00007C1A 0002                            		DW		2				; ヘッドの数（2にしなければいけない）
    23 00007C1C 00000000                        		DD		0				; パーティションを使ってないのでここは必ず0
    24 00007C20 00000B40                        		DD		2880			; このドライブ大きさをもう一度書く
    25 00007C24 00 00 29                        		DB		0,0,0x29		; よくわからないけどこの値にしておくといいらしい
    26 00007C27 FFFFFFFF                        		DD		0xffffffff		; たぶんボリュームシリアル番号
    27 00007C2B 48 41 52 49 42 4F 54 45 4F 53   		DB		"HARIBOTEOS "	; ディスクの名前（11バイト）
       00007C35 20 
    28 00007C36 46 41 54 31 32 20 20 20         		DB		"FAT12   "		; フォーマットの名前（8バイト）
    29 00007C3E 00 00 00 00 00 00 00 00 00 00   		RESB	18				; とりあえず18バイトあけておく
       00007C48 00 00 00 00 00 00 00 00 
    30 00007C50                                 
    31 00007C50                                 ; プログラム本体
    32 00007C50                                 
    33 00007C50                                 entry:
    34 00007C50 B8 0000                         		MOV		AX,0			; レジスタ初期化
    35 00007C53 8E D0                           		MOV		SS,AX
    36 00007C55 BC 7C00                         		MOV		SP,0x7c00
    37 00007C58 8E D8                           		MOV		DS,AX
    38 00007C5A                                 
    39 00007C5A                                 ; ディスクを読む
    40 00007C5A                                 
    41 00007C5A B8 0820                         		MOV		AX,0x0820
    42 00007C5D 8E C0                           		MOV		ES,AX
    43 00007C5F B5 00                           		MOV		CH,0			; シリンダ0
    44 00007C61 B6 00                           		MOV		DH,0			; ヘッド0
    45 00007C63 B1 02                           		MOV		CL,2			; セクタ2
    46 00007C65 BB 0143                         		MOV		BX,18*2*CYLS-1	; 読み込みたい合計セクタ数
    47 00007C68 E8 0033                         		CALL	readfast		; 高速読み込み
    48 00007C6B                                 
    49 00007C6B                                 ; 読み終わったのでharibote.sysを実行だ！
    50 00007C6B                                 
    51 00007C6B C6 06 0FF0 09                   		MOV		BYTE [0x0ff0],CYLS	; IPLがどこまで読んだのかをメモ
    52 00007C70 E9 458D                         		JMP		0xc200
    53 00007C73                                 
    54 00007C73                                 error:
    55 00007C73 B8 0000                         		MOV		AX,0
    56 00007C76 8E C0                           		MOV		ES,AX
    57 00007C78 BE 7C90                         		MOV		SI,msg
    58 00007C7B                                 putloop:
    59 00007C7B 8A 04                           		MOV		AL,[SI]
    60 00007C7D 83 C6 01                        		ADD		SI,1			; SIに1を足す
    61 00007C80 3C 00                           		CMP		AL,0
    62 00007C82 74 09                           		JE		fin
    63 00007C84 B4 0E                           		MOV		AH,0x0e			; 一文字表示ファンクション
    64 00007C86 BB 000F                         		MOV		BX,15			; カラーコード
    65 00007C89 CD 10                           		INT		0x10			; ビデオBIOS呼び出し
    66 00007C8B EB EE                           		JMP		putloop
    67 00007C8D                                 fin:
    68 00007C8D F4                              		HLT						; 何かあるまでCPUを停止させる
    69 00007C8E EB FD                           		JMP		fin				; 無限ループ
    70 00007C90                                 msg:
    71 00007C90 0A 0A                           		DB		0x0a, 0x0a		; 改行を2つ
    72 00007C92 6C 6F 61 64 20 65 72 72 6F 72   		DB		"load error"
    73 00007C9C 0A                              		DB		0x0a			; 改行
    74 00007C9D 00                              		DB		0
    75 00007C9E                                 
    76 00007C9E                                 readfast:	; ALを使ってできるだけまとめて読み出す
    77 00007C9E                                 ;	ES:読み込み番地, CH:シリンダ, DH:ヘッド, CL:セクタ, BX:読み込みセクタ数
    78 00007C9E                                 
    79 00007C9E 8C C0                           		MOV		AX,ES			; < ESからALの最大値を計算 >
    80 00007CA0 C1 E0 03                        		SHL		AX,3			; AXを32で割って、その結果をAHに入れたことになる （SHLは左シフト命令）
    81 00007CA3 80 E4 7F                        		AND		AH,0x7f			; AHはAHを128で割った余り（512*128=64K）
    82 00007CA6 B0 80                           		MOV		AL,128			; AL = 128 - AH; 一番近い64KB境界まで最大何セクタ入るか
    83 00007CA8 28 E0                           		SUB		AL,AH
    84 00007CAA                                 
    85 00007CAA 88 DC                           		MOV		AH,BL			; < BXからALの最大値をAHに計算 >
    86 00007CAC 80 FF 00                        		CMP		BH,0			; if (BH != 0) { AH = 18; }
    87 00007CAF 74 02                           		JE		.skip1
    88 00007CB1 B4 12                           		MOV		AH,18
    89 00007CB3                                 .skip1:
    90 00007CB3 38 E0                           		CMP		AL,AH			; if (AL > AH) { AL = AH; }
    91 00007CB5 76 02                           		JBE		.skip2
    92 00007CB7 88 E0                           		MOV		AL,AH
    93 00007CB9                                 .skip2:
    94 00007CB9                                 
    95 00007CB9 B4 13                           		MOV		AH,19			; < CLからALの最大値をAHに計算 >
    96 00007CBB 28 CC                           		SUB		AH,CL			; AH = 19 - CL;
    97 00007CBD 38 E0                           		CMP		AL,AH			; if (AL > AH) { AL = AH; }
    98 00007CBF 76 02                           		JBE		.skip3
    99 00007CC1 88 E0                           		MOV		AL,AH
   100 00007CC3                                 .skip3:
   101 00007CC3                                 
   102 00007CC3 53                              		PUSH	BX
   103 00007CC4 BE 0000                         		MOV		SI,0			; 失敗回数を数えるレジスタ
   104 00007CC7                                 retry:
   105 00007CC7 B4 02                           		MOV		AH,0x02			; AH=0x02 : ディスク読み込み
   106 00007CC9 BB 0000                         		MOV		BX,0
   107 00007CCC B2 00                           		MOV		DL,0x00			; Aドライブ
   108 00007CCE 06                              		PUSH	ES
   109 00007CCF 52                              		PUSH	DX
   110 00007CD0 51                              		PUSH	CX
   111 00007CD1 50                              		PUSH	AX
   112 00007CD2 CD 13                           		INT		0x13			; ディスクBIOS呼び出し
   113 00007CD4 73 14                           		JNC		next			; エラーがおきなければnextへ
   114 00007CD6 83 C6 01                        		ADD		SI,1			; SIに1を足す
   115 00007CD9 83 FE 05                        		CMP		SI,5			; SIと5を比較
   116 00007CDC 73 95                           		JAE		error			; SI >= 5 だったらerrorへ
   117 00007CDE B4 00                           		MOV		AH,0x00
   118 00007CE0 B2 00                           		MOV		DL,0x00			; Aドライブ
   119 00007CE2 CD 13                           		INT		0x13			; ドライブのリセット
   120 00007CE4 58                              		POP		AX
   121 00007CE5 59                              		POP		CX
   122 00007CE6 5A                              		POP		DX
   123 00007CE7 07                              		POP		ES
   124 00007CE8 EB DD                           		JMP		retry
   125 00007CEA                                 next:
   126 00007CEA 58                              		POP		AX
   127 00007CEB 59                              		POP		CX
   128 00007CEC 5A                              		POP		DX
   129 00007CED 5B                              		POP		BX				; ESの内容をBXで受け取る
   130 00007CEE C1 EB 05                        		SHR		BX,5			; BXを16バイト単位から512バイト単位へ
   131 00007CF1 B4 00                           		MOV		AH,0
   132 00007CF3 01 C3                           		ADD		BX,AX			; BX += AL;
   133 00007CF5 C1 E3 05                        		SHL		BX,5			; BXを512バイト単位から16バイト単位へ
   134 00007CF8 8E C3                           		MOV		ES,BX			; これで ES += AL * 0x20; になる
   135 00007CFA 5B                              		POP		BX
   136 00007CFB 29 C3                           		SUB		BX,AX
   137 00007CFD 74 18                           		JZ		.ret
   138 00007CFF 00 C1                           		ADD		CL,AL			; CLにALを足す
   139 00007D01 80 F9 12                        		CMP		CL,18			; CLと18を比較
   140 00007D04 76 98                           		JBE		readfast		; CL <= 18 だったらreadfastへ
   141 00007D06 B1 01                           		MOV		CL,1
   142 00007D08 80 C6 01                        		ADD		DH,1
   143 00007D0B 80 FE 02                        		CMP		DH,2
   144 00007D0E 72 8E                           		JB		readfast		; DH < 2 だったらreadfastへ
   145 00007D10 B6 00                           		MOV		DH,0
   146 00007D12 80 C5 01                        		ADD		CH,1
   147 00007D15 EB 87                           		JMP		readfast
   148 00007D17                                 .ret:
   149 00007D17 C3                              		RET
   150 00007D18                                 
   151 00007D18 00 00 00 00 00 00 00 00 00 00   		RESB	0x7dfe-$		; 0x7dfeまでを0x00で埋める命令
       00007D22 00 00 00 00 00 00 00 00 00 00 
       00007D2C 00 00 00 00 00 00 00 00 00 00 
       00007D36 00 00 00 00 00 00 00 00 00 00 
       00007D40 00 00 00 00 00 00 00 00 00 00 
       00007D4A 00 00 00 00 00 00 00 00 00 00 
       00007D54 00 00 00 00 00 00 00 00 00 00 
       00007D5E 00 00 00 00 00 00 00 00 00 00 
       00007D68 00 00 00 00 00 00 00 00 00 00 
       00007D72 00 00 00 00 00 00 00 00 00 00 
       00007D7C 00 00 00 00 00 00 00 00 00 00 
       00007D86 00 00 00 00 00 00 00 00 00 00 
       00007D90 00 00 00 00 00 00 00 00 00 00 
       00007D9A 00 00 00 00 00 00 00 00 00 00 
       00007DA4 00 00 00 00 00 00 00 00 00 00 
       00007DAE 00 00 00 00 00 00 00 00 00 00 
       00007DB8 00 00 00 00 00 00 00 00 00 00 
       00007DC2 00 00 00 00 00 00 00 00 00 00 
       00007DCC 00 00 00 00 00 00 00 00 00 00 
       00007DD6 00 00 00 00 00 00 00 00 00 00 
       00007DE0 00 00 00 00 00 00 00 00 00 00 
       00007DEA 00 00 00 00 00 00 00 00 00 00 
       00007DF4 00 00 00 00 00 00 00 00 00 00 
   152 00007DFE                                 
   153 00007DFE 55 AA                           		DB		0x55, 0xaa
